Index: zsys/vendor/github.com/bicomsystems/go-libzfs/zfs.c
===================================================================
--- zsys.orig/vendor/github.com/bicomsystems/go-libzfs/zfs.c
+++ zsys/vendor/github.com/bicomsystems/go-libzfs/zfs.c
@@ -3,6 +3,7 @@
  */
 
 #include <libzfs.h>
+#include <libzutil.h>
 #include <memory.h>
 #include <string.h>
 #include <stdio.h>
@@ -11,7 +12,6 @@
 #include "zpool.h"
 #include "zfs.h"
 
-
 dataset_list_t *create_dataset_list_item() {
 	dataset_list_t *zlist = malloc(sizeof(dataset_list_t));
 	memset(zlist, 0, sizeof(dataset_list_t));
@@ -133,7 +133,14 @@ int dataset_promote(dataset_list_ptr dat
 }
 
 int dataset_rename(dataset_list_ptr dataset, const char* new_name, boolean_t recur, boolean_t force_unm) {
-	return zfs_rename(dataset->zh, new_name, recur, force_unm);
+	renameflags_t flags = { 0 };
+	if (recur) {
+		flags.recursive = B_TRUE;
+	}
+	if (force_unm) {
+		flags.forceunmount = B_TRUE;
+	}
+	return zfs_rename(dataset->zh, new_name, flags);
 }
 
 const char *dataset_is_mounted(dataset_list_ptr dataset){
Index: zsys/vendor/github.com/bicomsystems/go-libzfs/common.go
===================================================================
--- zsys.orig/vendor/github.com/bicomsystems/go-libzfs/common.go
+++ zsys/vendor/github.com/bicomsystems/go-libzfs/common.go
@@ -10,7 +10,7 @@ package zfs
 
 /*
 #cgo CFLAGS: -I /usr/include/libzfs -I /usr/include/libspl -DHAVE_IOCTL_IN_SYS_IOCTL_H -D_GNU_SOURCE
-#cgo LDFLAGS: -lzfs -lzpool -lnvpair
+#cgo LDFLAGS: -lzfs -lzfs_core -lzpool -lnvpair
 
 #include <stdlib.h>
 #include <libzfs.h>
Index: zsys/vendor/github.com/bicomsystems/go-libzfs/sendrecv.go
===================================================================
--- zsys.orig/vendor/github.com/bicomsystems/go-libzfs/sendrecv.go
+++ zsys/vendor/github.com/bicomsystems/go-libzfs/sendrecv.go
@@ -59,7 +59,6 @@ func to_sendflags_t(flags *SendFlags) (c
 	cflags.replicate = to_boolean_t(flags.Replicate)
 	cflags.doall = to_boolean_t(flags.DoAll)
 	cflags.fromorigin = to_boolean_t(flags.FromOrigin)
-	cflags.dedup = to_boolean_t(flags.Dedup)
 	cflags.props = to_boolean_t(flags.Props)
 	cflags.dryrun = to_boolean_t(flags.DryRun)
 	cflags.parsable = to_boolean_t(flags.Parsable)
