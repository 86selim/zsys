// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zsys.proto

package zsys

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateUserDataRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Homepath             string   `protobuf:"bytes,2,opt,name=homepath,proto3" json:"homepath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserDataRequest) Reset()         { *m = CreateUserDataRequest{} }
func (m *CreateUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserDataRequest) ProtoMessage()    {}
func (*CreateUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{0}
}

func (m *CreateUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserDataRequest.Unmarshal(m, b)
}
func (m *CreateUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserDataRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserDataRequest.Merge(m, src)
}
func (m *CreateUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserDataRequest.Size(m)
}
func (m *CreateUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserDataRequest proto.InternalMessageInfo

func (m *CreateUserDataRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *CreateUserDataRequest) GetHomepath() string {
	if m != nil {
		return m.Homepath
	}
	return ""
}

type LogResponse struct {
	Log                  string   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{1}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserDataRequest)(nil), "zsys.CreateUserDataRequest")
	proto.RegisterType((*LogResponse)(nil), "zsys.LogResponse")
}

func init() { proto.RegisterFile("zsys.proto", fileDescriptor_05865bfaed6eea5d) }

var fileDescriptor_05865bfaed6eea5d = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xaa, 0x2a, 0xae, 0x2c,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xdc, 0xb9, 0x44, 0x9d, 0x8b,
	0x52, 0x13, 0x4b, 0x52, 0x43, 0x8b, 0x53, 0x8b, 0x5c, 0x12, 0x4b, 0x12, 0x83, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x8b, 0x53, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0xc0, 0x6c, 0x21, 0x29, 0x2e, 0x8e, 0x8c, 0xfc, 0xdc, 0xd4, 0x82, 0xc4, 0x92, 0x0c,
	0x09, 0x26, 0xb0, 0x38, 0x9c, 0xaf, 0x24, 0xcf, 0xc5, 0xed, 0x93, 0x9f, 0x1e, 0x94, 0x5a, 0x5c,
	0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc0, 0xc5, 0x9c, 0x93, 0x9f, 0x0e, 0xd5, 0x0d, 0x62, 0x1a,
	0x79, 0x71, 0xb1, 0x44, 0x15, 0x57, 0x16, 0x0b, 0x39, 0x71, 0xf1, 0xa1, 0xda, 0x28, 0x24, 0xad,
	0x07, 0x76, 0x16, 0x56, 0x77, 0x48, 0x09, 0x42, 0x24, 0x91, 0xcc, 0x36, 0x60, 0x4c, 0x62, 0x03,
	0x7b, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x40, 0x12, 0x78, 0x4d, 0xd0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZsysClient is the client API for Zsys service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZsysClient interface {
	CreateUserData(ctx context.Context, in *CreateUserDataRequest, opts ...grpc.CallOption) (Zsys_CreateUserDataClient, error)
}

type zsysClient struct {
	cc *grpc.ClientConn
}

func NewZsysClient(cc *grpc.ClientConn) ZsysClient {
	return &zsysClient{cc}
}

func (c *zsysClient) CreateUserData(ctx context.Context, in *CreateUserDataRequest, opts ...grpc.CallOption) (Zsys_CreateUserDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zsys_serviceDesc.Streams[0], "/zsys.Zsys/CreateUserData", opts...)
	if err != nil {
		return nil, err
	}
	x := &zsysCreateUserDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zsys_CreateUserDataClient interface {
	Recv() (*LogResponse, error)
	grpc.ClientStream
}

type zsysCreateUserDataClient struct {
	grpc.ClientStream
}

func (x *zsysCreateUserDataClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ZsysServer is the server API for Zsys service.
type ZsysServer interface {
	CreateUserData(*CreateUserDataRequest, Zsys_CreateUserDataServer) error
}

// UnimplementedZsysServer can be embedded to have forward compatible implementations.
type UnimplementedZsysServer struct {
}

func (*UnimplementedZsysServer) CreateUserData(req *CreateUserDataRequest, srv Zsys_CreateUserDataServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateUserData not implemented")
}

func RegisterZsysServer(s *grpc.Server, srv ZsysServer) {
	s.RegisterService(&_Zsys_serviceDesc, srv)
}

func _Zsys_CreateUserData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateUserDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZsysServer).CreateUserData(m, &zsysCreateUserDataServer{stream})
}

type Zsys_CreateUserDataServer interface {
	Send(*LogResponse) error
	grpc.ServerStream
}

type zsysCreateUserDataServer struct {
	grpc.ServerStream
}

func (x *zsysCreateUserDataServer) Send(m *LogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Zsys_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zsys.Zsys",
	HandlerType: (*ZsysServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateUserData",
			Handler:       _Zsys_CreateUserData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "zsys.proto",
}
