// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zsys.proto

package zsys

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type LogResponse struct {
	Log                  string   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{1}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

type CreateUserDataRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Homepath             string   `protobuf:"bytes,2,opt,name=homepath,proto3" json:"homepath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserDataRequest) Reset()         { *m = CreateUserDataRequest{} }
func (m *CreateUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserDataRequest) ProtoMessage()    {}
func (*CreateUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{2}
}

func (m *CreateUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserDataRequest.Unmarshal(m, b)
}
func (m *CreateUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserDataRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserDataRequest.Merge(m, src)
}
func (m *CreateUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserDataRequest.Size(m)
}
func (m *CreateUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserDataRequest proto.InternalMessageInfo

func (m *CreateUserDataRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *CreateUserDataRequest) GetHomepath() string {
	if m != nil {
		return m.Homepath
	}
	return ""
}

type ChangeHomeOnUserDataRequest struct {
	Home                 string   `protobuf:"bytes,1,opt,name=home,proto3" json:"home,omitempty"`
	NewHome              string   `protobuf:"bytes,2,opt,name=newHome,proto3" json:"newHome,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeHomeOnUserDataRequest) Reset()         { *m = ChangeHomeOnUserDataRequest{} }
func (m *ChangeHomeOnUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeHomeOnUserDataRequest) ProtoMessage()    {}
func (*ChangeHomeOnUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{3}
}

func (m *ChangeHomeOnUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeHomeOnUserDataRequest.Unmarshal(m, b)
}
func (m *ChangeHomeOnUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeHomeOnUserDataRequest.Marshal(b, m, deterministic)
}
func (m *ChangeHomeOnUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeHomeOnUserDataRequest.Merge(m, src)
}
func (m *ChangeHomeOnUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeHomeOnUserDataRequest.Size(m)
}
func (m *ChangeHomeOnUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeHomeOnUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeHomeOnUserDataRequest proto.InternalMessageInfo

func (m *ChangeHomeOnUserDataRequest) GetHome() string {
	if m != nil {
		return m.Home
	}
	return ""
}

func (m *ChangeHomeOnUserDataRequest) GetNewHome() string {
	if m != nil {
		return m.NewHome
	}
	return ""
}

type PrepareBootResponse struct {
	// Types that are valid to be assigned to Reply:
	//	*PrepareBootResponse_Log
	//	*PrepareBootResponse_Changed
	Reply                isPrepareBootResponse_Reply `protobuf_oneof:"reply"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PrepareBootResponse) Reset()         { *m = PrepareBootResponse{} }
func (m *PrepareBootResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareBootResponse) ProtoMessage()    {}
func (*PrepareBootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{4}
}

func (m *PrepareBootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareBootResponse.Unmarshal(m, b)
}
func (m *PrepareBootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareBootResponse.Marshal(b, m, deterministic)
}
func (m *PrepareBootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareBootResponse.Merge(m, src)
}
func (m *PrepareBootResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareBootResponse.Size(m)
}
func (m *PrepareBootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareBootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareBootResponse proto.InternalMessageInfo

type isPrepareBootResponse_Reply interface {
	isPrepareBootResponse_Reply()
}

type PrepareBootResponse_Log struct {
	Log string `protobuf:"bytes,1,opt,name=log,proto3,oneof"`
}

type PrepareBootResponse_Changed struct {
	Changed bool `protobuf:"varint,2,opt,name=changed,proto3,oneof"`
}

func (*PrepareBootResponse_Log) isPrepareBootResponse_Reply() {}

func (*PrepareBootResponse_Changed) isPrepareBootResponse_Reply() {}

func (m *PrepareBootResponse) GetReply() isPrepareBootResponse_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *PrepareBootResponse) GetLog() string {
	if x, ok := m.GetReply().(*PrepareBootResponse_Log); ok {
		return x.Log
	}
	return ""
}

func (m *PrepareBootResponse) GetChanged() bool {
	if x, ok := m.GetReply().(*PrepareBootResponse_Changed); ok {
		return x.Changed
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PrepareBootResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PrepareBootResponse_Log)(nil),
		(*PrepareBootResponse_Changed)(nil),
	}
}

type CommitBootResponse struct {
	// Types that are valid to be assigned to Reply:
	//	*CommitBootResponse_Log
	//	*CommitBootResponse_Changed
	Reply                isCommitBootResponse_Reply `protobuf_oneof:"reply"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CommitBootResponse) Reset()         { *m = CommitBootResponse{} }
func (m *CommitBootResponse) String() string { return proto.CompactTextString(m) }
func (*CommitBootResponse) ProtoMessage()    {}
func (*CommitBootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05865bfaed6eea5d, []int{5}
}

func (m *CommitBootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitBootResponse.Unmarshal(m, b)
}
func (m *CommitBootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitBootResponse.Marshal(b, m, deterministic)
}
func (m *CommitBootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitBootResponse.Merge(m, src)
}
func (m *CommitBootResponse) XXX_Size() int {
	return xxx_messageInfo_CommitBootResponse.Size(m)
}
func (m *CommitBootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitBootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitBootResponse proto.InternalMessageInfo

type isCommitBootResponse_Reply interface {
	isCommitBootResponse_Reply()
}

type CommitBootResponse_Log struct {
	Log string `protobuf:"bytes,1,opt,name=log,proto3,oneof"`
}

type CommitBootResponse_Changed struct {
	Changed bool `protobuf:"varint,2,opt,name=changed,proto3,oneof"`
}

func (*CommitBootResponse_Log) isCommitBootResponse_Reply() {}

func (*CommitBootResponse_Changed) isCommitBootResponse_Reply() {}

func (m *CommitBootResponse) GetReply() isCommitBootResponse_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *CommitBootResponse) GetLog() string {
	if x, ok := m.GetReply().(*CommitBootResponse_Log); ok {
		return x.Log
	}
	return ""
}

func (m *CommitBootResponse) GetChanged() bool {
	if x, ok := m.GetReply().(*CommitBootResponse_Changed); ok {
		return x.Changed
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CommitBootResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CommitBootResponse_Log)(nil),
		(*CommitBootResponse_Changed)(nil),
	}
}

func init() {
	proto.RegisterType((*Empty)(nil), "zsys.Empty")
	proto.RegisterType((*LogResponse)(nil), "zsys.LogResponse")
	proto.RegisterType((*CreateUserDataRequest)(nil), "zsys.CreateUserDataRequest")
	proto.RegisterType((*ChangeHomeOnUserDataRequest)(nil), "zsys.ChangeHomeOnUserDataRequest")
	proto.RegisterType((*PrepareBootResponse)(nil), "zsys.PrepareBootResponse")
	proto.RegisterType((*CommitBootResponse)(nil), "zsys.CommitBootResponse")
}

func init() { proto.RegisterFile("zsys.proto", fileDescriptor_05865bfaed6eea5d) }

var fileDescriptor_05865bfaed6eea5d = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4f, 0xbb, 0x40,
	0x10, 0xc5, 0x4b, 0xff, 0xed, 0x9f, 0x3a, 0x4d, 0x8c, 0x8e, 0x9a, 0x20, 0x3d, 0xa8, 0x7b, 0xf2,
	0xd4, 0x34, 0x1a, 0xe3, 0x1d, 0x34, 0x92, 0xa8, 0xd5, 0x90, 0x78, 0xf1, 0xb6, 0xea, 0x04, 0x4c,
	0x0a, 0xbb, 0xee, 0x6e, 0x63, 0xf0, 0x23, 0xf8, 0xa9, 0x0d, 0x0b, 0x54, 0x1a, 0xf1, 0xe6, 0xed,
	0xcd, 0xf0, 0x78, 0x0c, 0xbf, 0x19, 0x80, 0x0f, 0x5d, 0xe8, 0xa9, 0x54, 0xc2, 0x08, 0x1c, 0x94,
	0x9a, 0xb9, 0x30, 0xbc, 0xcc, 0xa4, 0x29, 0xd8, 0x01, 0x8c, 0x6f, 0x44, 0x12, 0x93, 0x96, 0x22,
	0xd7, 0x84, 0x5b, 0xf0, 0x6f, 0x21, 0x12, 0xcf, 0x39, 0x74, 0x8e, 0x37, 0xe2, 0x52, 0xb2, 0x2b,
	0xd8, 0x0b, 0x15, 0x71, 0x43, 0x0f, 0x9a, 0xd4, 0x05, 0x37, 0x3c, 0xa6, 0xb7, 0x25, 0x69, 0x83,
	0x08, 0x83, 0xa5, 0x26, 0x55, 0x7b, 0xad, 0x46, 0x1f, 0x46, 0xa9, 0xc8, 0x48, 0x72, 0x93, 0x7a,
	0x7d, 0xdb, 0x5f, 0xd5, 0xec, 0x1a, 0x26, 0x61, 0xca, 0xf3, 0x84, 0x22, 0x91, 0xd1, 0x5d, 0xde,
	0x11, 0x57, 0x5a, 0x9b, 0xb8, 0x52, 0xa3, 0x07, 0x6e, 0x4e, 0xef, 0xa5, 0xbf, 0x4e, 0x6b, 0x4a,
	0x36, 0x87, 0x9d, 0x7b, 0x45, 0x92, 0x2b, 0x0a, 0x84, 0x30, 0xab, 0xf1, 0xb1, 0x35, 0x7e, 0xd4,
	0xb3, 0x3f, 0x80, 0x3e, 0xb8, 0xcf, 0xf6, 0xbb, 0x2f, 0x36, 0x64, 0x14, 0xf5, 0xe2, 0xa6, 0x11,
	0xb8, 0x30, 0x54, 0x24, 0x17, 0x05, 0xbb, 0x05, 0x0c, 0x45, 0x96, 0xbd, 0x9a, 0x3f, 0x89, 0x3b,
	0xf9, 0xec, 0xc3, 0xe0, 0x51, 0x17, 0x1a, 0x03, 0xd8, 0x5c, 0xa7, 0x87, 0x93, 0xa9, 0x5d, 0x46,
	0x27, 0x53, 0x7f, 0xbb, 0x7a, 0xd8, 0xda, 0xc8, 0xcc, 0xc1, 0x39, 0xec, 0x76, 0x81, 0xc3, 0xa3,
	0x3a, 0xe9, 0x77, 0xa8, 0xdd, 0x79, 0xe7, 0x30, 0x6e, 0xb1, 0xc3, 0x71, 0xe5, 0xb1, 0xe7, 0xe0,
	0xef, 0x57, 0x45, 0x07, 0xdb, 0x99, 0x83, 0x67, 0x00, 0xdf, 0x90, 0xd6, 0xdf, 0xf3, 0xea, 0x59,
	0x7e, 0x30, 0x9c, 0x39, 0x4f, 0xff, 0xed, 0xe1, 0x9d, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x10,
	0x5a, 0xdc, 0xad, 0x86, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZsysClient is the client API for Zsys service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZsysClient interface {
	CreateUserData(ctx context.Context, in *CreateUserDataRequest, opts ...grpc.CallOption) (Zsys_CreateUserDataClient, error)
	ChangeHomeOnUserData(ctx context.Context, in *ChangeHomeOnUserDataRequest, opts ...grpc.CallOption) (Zsys_ChangeHomeOnUserDataClient, error)
	PrepareBoot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Zsys_PrepareBootClient, error)
	CommitBoot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Zsys_CommitBootClient, error)
}

type zsysClient struct {
	cc *grpc.ClientConn
}

func NewZsysClient(cc *grpc.ClientConn) ZsysClient {
	return &zsysClient{cc}
}

func (c *zsysClient) CreateUserData(ctx context.Context, in *CreateUserDataRequest, opts ...grpc.CallOption) (Zsys_CreateUserDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zsys_serviceDesc.Streams[0], "/zsys.Zsys/CreateUserData", opts...)
	if err != nil {
		return nil, err
	}
	x := &zsysCreateUserDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zsys_CreateUserDataClient interface {
	Recv() (*LogResponse, error)
	grpc.ClientStream
}

type zsysCreateUserDataClient struct {
	grpc.ClientStream
}

func (x *zsysCreateUserDataClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zsysClient) ChangeHomeOnUserData(ctx context.Context, in *ChangeHomeOnUserDataRequest, opts ...grpc.CallOption) (Zsys_ChangeHomeOnUserDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zsys_serviceDesc.Streams[1], "/zsys.Zsys/ChangeHomeOnUserData", opts...)
	if err != nil {
		return nil, err
	}
	x := &zsysChangeHomeOnUserDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zsys_ChangeHomeOnUserDataClient interface {
	Recv() (*LogResponse, error)
	grpc.ClientStream
}

type zsysChangeHomeOnUserDataClient struct {
	grpc.ClientStream
}

func (x *zsysChangeHomeOnUserDataClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zsysClient) PrepareBoot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Zsys_PrepareBootClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zsys_serviceDesc.Streams[2], "/zsys.Zsys/PrepareBoot", opts...)
	if err != nil {
		return nil, err
	}
	x := &zsysPrepareBootClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zsys_PrepareBootClient interface {
	Recv() (*PrepareBootResponse, error)
	grpc.ClientStream
}

type zsysPrepareBootClient struct {
	grpc.ClientStream
}

func (x *zsysPrepareBootClient) Recv() (*PrepareBootResponse, error) {
	m := new(PrepareBootResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zsysClient) CommitBoot(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Zsys_CommitBootClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zsys_serviceDesc.Streams[3], "/zsys.Zsys/CommitBoot", opts...)
	if err != nil {
		return nil, err
	}
	x := &zsysCommitBootClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zsys_CommitBootClient interface {
	Recv() (*CommitBootResponse, error)
	grpc.ClientStream
}

type zsysCommitBootClient struct {
	grpc.ClientStream
}

func (x *zsysCommitBootClient) Recv() (*CommitBootResponse, error) {
	m := new(CommitBootResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ZsysServer is the server API for Zsys service.
type ZsysServer interface {
	CreateUserData(*CreateUserDataRequest, Zsys_CreateUserDataServer) error
	ChangeHomeOnUserData(*ChangeHomeOnUserDataRequest, Zsys_ChangeHomeOnUserDataServer) error
	PrepareBoot(*Empty, Zsys_PrepareBootServer) error
	CommitBoot(*Empty, Zsys_CommitBootServer) error
}

// UnimplementedZsysServer can be embedded to have forward compatible implementations.
type UnimplementedZsysServer struct {
}

func (*UnimplementedZsysServer) CreateUserData(req *CreateUserDataRequest, srv Zsys_CreateUserDataServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateUserData not implemented")
}
func (*UnimplementedZsysServer) ChangeHomeOnUserData(req *ChangeHomeOnUserDataRequest, srv Zsys_ChangeHomeOnUserDataServer) error {
	return status.Errorf(codes.Unimplemented, "method ChangeHomeOnUserData not implemented")
}
func (*UnimplementedZsysServer) PrepareBoot(req *Empty, srv Zsys_PrepareBootServer) error {
	return status.Errorf(codes.Unimplemented, "method PrepareBoot not implemented")
}
func (*UnimplementedZsysServer) CommitBoot(req *Empty, srv Zsys_CommitBootServer) error {
	return status.Errorf(codes.Unimplemented, "method CommitBoot not implemented")
}

func RegisterZsysServer(s *grpc.Server, srv ZsysServer) {
	s.RegisterService(&_Zsys_serviceDesc, srv)
}

func _Zsys_CreateUserData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateUserDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZsysServer).CreateUserData(m, &zsysCreateUserDataServer{stream})
}

type Zsys_CreateUserDataServer interface {
	Send(*LogResponse) error
	grpc.ServerStream
}

type zsysCreateUserDataServer struct {
	grpc.ServerStream
}

func (x *zsysCreateUserDataServer) Send(m *LogResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Zsys_ChangeHomeOnUserData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ChangeHomeOnUserDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZsysServer).ChangeHomeOnUserData(m, &zsysChangeHomeOnUserDataServer{stream})
}

type Zsys_ChangeHomeOnUserDataServer interface {
	Send(*LogResponse) error
	grpc.ServerStream
}

type zsysChangeHomeOnUserDataServer struct {
	grpc.ServerStream
}

func (x *zsysChangeHomeOnUserDataServer) Send(m *LogResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Zsys_PrepareBoot_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZsysServer).PrepareBoot(m, &zsysPrepareBootServer{stream})
}

type Zsys_PrepareBootServer interface {
	Send(*PrepareBootResponse) error
	grpc.ServerStream
}

type zsysPrepareBootServer struct {
	grpc.ServerStream
}

func (x *zsysPrepareBootServer) Send(m *PrepareBootResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Zsys_CommitBoot_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZsysServer).CommitBoot(m, &zsysCommitBootServer{stream})
}

type Zsys_CommitBootServer interface {
	Send(*CommitBootResponse) error
	grpc.ServerStream
}

type zsysCommitBootServer struct {
	grpc.ServerStream
}

func (x *zsysCommitBootServer) Send(m *CommitBootResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Zsys_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zsys.Zsys",
	HandlerType: (*ZsysServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateUserData",
			Handler:       _Zsys_CreateUserData_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ChangeHomeOnUserData",
			Handler:       _Zsys_ChangeHomeOnUserData_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PrepareBoot",
			Handler:       _Zsys_PrepareBoot_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CommitBoot",
			Handler:       _Zsys_CommitBoot_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "zsys.proto",
}
